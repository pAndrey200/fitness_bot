import logging
from aiogram import Router, F
from aiogram.types import Message, BufferedInputFile
from aiogram.filters import Command

from data import users
from services import ensure_logs_for_today, build_progress_chart
from handlers.start import get_main_menu



router = Router()
logger = logging.getLogger(__name__)

@router.message(F.text == "Check Progress")
async def check_progress(message: Message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: –≤–æ–¥–∞, –∫–∞–ª–æ—Ä–∏–∏ –∏ —Ç.–¥.
    """
    user_id = message.from_user.id
    if user_id not in users:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å /set_profile.")
        return

    ensure_logs_for_today(user_id)
    today_str = list(users[user_id]["logs"].keys())[-1]
    day_log = users[user_id]["logs"][today_str]

    water = day_log["water"]
    water_goal = users[user_id]["daily_water_goal"]

    food_cal = day_log["food_cal"]
    cal_goal = users[user_id]["daily_cal_goal"]

    burned = day_log["burned_cal"]
    balance = food_cal - burned

    text = (
        f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞ {today_str}:\n\n"
        f"–í–æ–¥–∞: {water:.0f} / {water_goal:.0f} –º–ª\n"
        f"–ö–∞–ª–æ—Ä–∏–∏: –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–æ {food_cal:.0f} / {cal_goal:.0f}, "
        f"—Å–æ–∂–∂–µ–Ω–æ {burned:.0f}, –±–∞–ª–∞–Ω—Å {balance:.0f}.\n"
    )
    await message.answer(text, reply_markup=get_main_menu())


@router.message(F.text == "Show Graph")
async def show_graph(message: Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é (7 –¥–Ω–µ–π).
    """
    user_id = message.from_user.id
    if user_id not in users:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.")
        return

    image_buf = build_progress_chart(user_id, days=7)
    if not image_buf:
        await message.answer("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.")
        return

    await message.answer_photo(
        photo=BufferedInputFile(image_buf.getvalue(), "chart.png"), 
        caption="–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≤–æ–¥–µ –∏ –∫–∞–ª–æ—Ä–∏—è–º (–∑–∞ 7 –¥–Ω–µ–π).",
        reply_markup=get_main_menu()
    )
